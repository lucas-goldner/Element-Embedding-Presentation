{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec3 iResolution;\nuniform float iTime;\nuniform shader iChannel0;\nuniform half2 iChannel0_size;\nuniform shader iChannel1;\nuniform half2 iChannel1_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 block = floor(fragCoord / vec2(16.0));\n    vec2 uv_noise = block / vec2(64.0);\n    uv_noise += (floor(vec2(iTime) * vec2(1234.0, 3543.0)) / vec2(64.0));\n    float block_thresh = pow(fract(iTime * 1236.0452880859375), 2.0) * 0.20000000298023223876953125;\n    float line_thresh = pow(fract(iTime * 2236.04541015625), 3.0) * 0.699999988079071044921875;\n    vec2 uv_r = uv;\n    vec2 uv_g = uv;\n    vec2 uv_b = uv;\n    vec4 _86 = iChannel1.eval(iChannel1_size *  uv_noise);\n    bool _91 = _86.x < block_thresh;\n    bool _105;\n    if (!_91)\n    {\n        _105 = iChannel1.eval(iChannel1_size *  vec2(uv_noise.y, 0.0)).y < line_thresh;\n    }\n    else\n    {\n        _105 = _91;\n    }\n    if (_105)\n    {\n        vec2 dist = (fract(uv_noise) - vec2(0.5)) * 0.300000011920928955078125;\n        uv_r += (dist * 0.100000001490116119384765625);\n        uv_g += (dist * 0.20000000298023223876953125);\n        uv_b += (dist * 0.125);\n    }\n    fragColor.x = iChannel0.eval(iChannel0_size *  uv_r).x;\n    fragColor.y = iChannel0.eval(iChannel0_size *  uv_g).y;\n    fragColor.z = iChannel0.eval(iChannel0_size *  uv_b).z;\n    if (iChannel1.eval(iChannel1_size *  uv_noise).y < block_thresh)\n    {\n        vec4 _158 = fragColor;\n        fragColor.x = _158.yyy.x;\n        fragColor.y = _158.yyy.y;\n        fragColor.z = _158.yyy.z;\n    }\n    if ((iChannel1.eval(iChannel1_size *  vec2(uv_noise.y, 0.0)).z * 3.5) < line_thresh)\n    {\n        vec4 _178 = fragColor;\n        vec3 _183 = vec3(0.0, dot(_178.xyz, vec3(1.0)), 0.0);\n        fragColor.x = _183.x;\n        fragColor.y = _183.y;\n        fragColor.z = _183.z;\n    }\n    vec4 _192 = iChannel1.eval(iChannel1_size *  uv_noise);\n    bool _197 = (_192.y * 1.5) < block_thresh;\n    bool _211;\n    if (!_197)\n    {\n        _211 = (iChannel1.eval(iChannel1_size *  vec2(uv_noise.y, 0.0)).y * 2.5) < line_thresh;\n    }\n    else\n    {\n        _211 = _197;\n    }\n    if (_211)\n    {\n        float line = fract(fragCoord.y / 3.0);\n        vec3 mask = vec3(3.0, 0.0, 0.0);\n        if (line > 0.333000004291534423828125)\n        {\n            mask = vec3(0.0, 3.0, 0.0);\n        }\n        if (line > 0.66600000858306884765625)\n        {\n            mask = vec3(0.0, 0.0, 3.0);\n        }\n        vec4 _235 = fragColor;\n        vec3 _237 = _235.xyz * mask;\n        fragColor.x = _237.x;\n        fragColor.y = _237.y;\n        fragColor.z = _237.z;\n    }\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 0,
      "name": "iChannel0",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 0,
      "columns": 1,
      "location": 1,
      "name": "iChannel1",
      "rows": 1,
      "type": 12
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 2,
      "name": "iResolution",
      "rows": 3,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 3,
      "name": "iTime",
      "rows": 1,
      "type": 10
    }
  ]
}